"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const offset_category_1 = require("./../../../shared/offset-category");
const offset_1 = require("./../../../shared/offset");
exports.radios = {
    comFreq: new offset_1.Offset({
        value: 0x34E,
        name: 'comFreq',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'Com frequency',
        type: 5 /* UInt16 */,
        convert: 'parseInt(`1` + ({VAL}).toString(16))',
        permission: 'rw',
    }),
    transponderFreq: new offset_1.Offset({
        value: 0x354,
        name: 'transponderFreq',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'XPND transponder frequency',
        type: 5 /* UInt16 */,
        convert: 'parseInt(`1` + ({VAL}).toString(16))',
        permission: 'rw',
    }),
    nav12Select: new offset_1.Offset({
        value: 0x374,
        name: 'nav12Select',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'NAV1/NAV2 select',
        type: 5 /* UInt16 */,
        permission: 'rw',
    }),
    dme12Select: new offset_1.Offset({
        value: 0x378,
        name: 'dme12Select',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'DME1/DME2 select',
        type: 5 /* UInt16 */,
        permission: 'rw',
    }),
    navAdfActivate: new offset_1.Offset({
        value: 0x388,
        name: 'navAdfActivate',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'NAV and ADF activate < FS2000',
        type: 5 /* UInt16 */,
        permission: 'w',
    }),
    comAtisActivate: new offset_1.Offset({
        value: 0x38A,
        name: 'comAtisActivate',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'COM/ATIS activate < FS2000',
        type: 5 /* UInt16 */,
        permission: 'w',
    }),
    innerMarker: new offset_1.Offset({
        value: 0xBAC,
        name: 'innerMarker',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'inner marker - activated when TRUE',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
    middleMarker: new offset_1.Offset({
        value: 0xBAE,
        name: 'middleMarker',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'middle marker - activated when TRUE',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
    outerMarker: new offset_1.Offset({
        value: 0xBB0,
        name: 'outerMarker',
        category: offset_category_1.OffsetCategory.RADIOS,
        description: 'outer marker - activated when TRUE',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
};
