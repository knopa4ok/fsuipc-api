"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const offset_category_1 = require("./../../../shared/offset-category");
const offset_1 = require("./../../../shared/offset");
exports.failure = {
    hydFailure: new offset_1.Offset({
        value: 0xB62,
        name: 'hydFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'hydraulic failure',
        type: 0 /* Byte */,
        convert: '{VAL} ? 1 : 0',
        permission: 'w',
    }),
    brakeFailure: new offset_1.Offset({
        value: 0xB63,
        name: 'brakeFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'brake failure - left, right, total',
        convert: '{VAL} === `left` ? 0 : {VAL} === `right` ? 1 : 2',
        type: 0 /* Byte */,
        permission: 'w',
    }),
    ADFFailure: new offset_1.Offset({
        value: 0xB64,
        name: 'ADFFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'ADF failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    ASIFailure: new offset_1.Offset({
        value: 0xB65,
        name: 'ASIFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'ASI failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    altimeterFailure: new offset_1.Offset({
        value: 0xB66,
        name: 'altimeterFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'altimeter failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    attitudeIndicatorFailure: new offset_1.Offset({
        value: 0xB67,
        name: 'attitudeIndicatorFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'attitude indicator failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    com1Failure: new offset_1.Offset({
        value: 0xB68,
        name: 'com1Failure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'COM1 failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    compassFailure: new offset_1.Offset({
        value: 0xB69,
        name: 'compassFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'compass failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    electricsFailure: new offset_1.Offset({
        value: 0xB6A,
        name: 'electricsFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'electrics failure',
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        type: 0 /* Byte */,
        permission: 'rw',
    }),
    engineFailure: new offset_1.Offset({
        value: 0xB6B,
        name: 'engineFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'engine failure',
        type: 12 /* BitArray */,
        length: 4,
        permission: 'rw',
    }),
    fuelIndicatorFailure: new offset_1.Offset({
        value: 0xB6C,
        name: 'fuelIndicatorFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'fuel indicator failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    headingFailure: new offset_1.Offset({
        value: 0xB6D,
        name: 'headingFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'direction indicator failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    VSIFailure: new offset_1.Offset({
        value: 0xB6E,
        name: 'VSIFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'VSI failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    transponderFailure: new offset_1.Offset({
        value: 0xB6F,
        name: 'transponderFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'transponder failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    NAVFailure: new offset_1.Offset({
        value: 0xB70,
        name: 'NAVFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'NAV radio gauge failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    pitotFailure: new offset_1.Offset({
        value: 0xB71,
        name: 'pitotFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'pitot failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    turnCoordinatorFailure: new offset_1.Offset({
        value: 0xB72,
        name: 'turnCoordinatorFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'turn coordinator failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
    vacuumFailure: new offset_1.Offset({
        value: 0xB73,
        name: 'vacuumFailure',
        category: offset_category_1.OffsetCategory.FAILURE,
        description: 'vacuum failure',
        type: 0 /* Byte */,
        convert: 'typeof {VAL} === `boolean` ? {VAL} ? 1 : 0 : !!{VAL}',
        permission: 'rw',
    }),
};
