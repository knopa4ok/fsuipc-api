"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const offset_category_1 = require("./../../../shared/offset-category");
const offset_1 = require("./../../../shared/offset");
exports.positionAttitude = {
    groundElevation: new offset_1.Offset({
        value: 0x20,
        name: 'groundElevation',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'ground elevation - feet',
        convert: 'Math.round({VAL} * 3.28084 / 256)',
        type: 3 /* Int32 */,
        permission: 'r',
    }),
    magVar: new offset_1.Offset({
        value: 0x2A0,
        name: 'magVar',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: '-ve is west, +ve east. mag to true by adding this, true to mag by substracting this',
        type: 2 /* Int16 */,
        convert: '+({VAL}*360/65536).toFixed(2)',
        permission: 'r',
    }),
    gs: new offset_1.Offset({
        value: 0x2B4,
        name: 'gs',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'ground speed in kt',
        type: 3 /* Int32 */,
        convert: 'Math.floor({VAL} * 3600 / 65536 / 1852)',
        permission: 'r',
    }),
    tas: new offset_1.Offset({
        value: 0x2B8,
        name: 'tas',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'true air speed - knots',
        type: 3 /* Int32 */,
        convert: 'Math.floor({VAL} / 128)',
        permission: 'r',
    }),
    ias: new offset_1.Offset({
        value: 0x2BC,
        name: 'ias',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'indicated air speed - knots',
        type: 3 /* Int32 */,
        convert: 'Math.floor({VAL} / 128)',
        permission: 'r',
    }),
    bpa: new offset_1.Offset({
        value: 0x2C4,
        name: 'bpa',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'barper pole airspeed - knots',
        type: 6 /* UInt32 */,
        convert: 'Math.floor({VAL} / 128)',
        permission: 'r',
    }),
    vs: new offset_1.Offset({
        value: 0x2C8,
        name: 'vs',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'vertical speed - ft/min',
        type: 3 /* Int32 */,
        convert: 'Math.floor({VAL} * 60 * 3.28084 / 256)',
        permission: 'r',
    }),
    whiskeyCompass: new offset_1.Offset({
        value: 0x2CC,
        name: 'whiskeyCompass',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'whiskey compass - degrees',
        type: 8 /* Double */,
        permission: 'r',
    }),
    vsAtTouchdown: new offset_1.Offset({
        value: 0x30C,
        name: 'vsAtTouchdown',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'vertical speed - m/s',
        type: 3 /* Int32 */,
        convert: 'Math.floor({VAL}*60*3.28084/256)',
        permission: 'r',
    }),
    planeOnground: new offset_1.Offset({
        value: 0x366,
        name: 'planeOnground',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'plane on the ground',
        type: 5 /* UInt16 */,
        convert: '!!{VAL}',
        permission: 'r',
    }),
    latitude: new offset_1.Offset({
        value: 0x560,
        name: 'latitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'latitude - -ve for south +ve for north',
        type: 4 /* Int64 */,
        convert: '{VAL} * 90 / (10001750 * 65536 * 65536)',
        permission: 'rw',
    }),
    longitude: new offset_1.Offset({
        value: 0x568,
        name: 'longitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'longitude - -ve for west +ve for east',
        type: 4 /* Int64 */,
        convert: '{VAL} * 360 / (65536 * 65536 * 65536 * 65536)',
        permission: 'rw',
    }),
    altitude: new offset_1.Offset({
        value: 0x570,
        name: 'altitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'altitude - AGL',
        type: 4 /* Int64 */,
        convert: '+({VAL} * 3.28084 / (65536 * 65536)).toFixed(2)',
        permission: 'rw',
    }),
    pitch: new offset_1.Offset({
        value: 0x578,
        name: 'pitch',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'pitch - 0 for level, -ve for pitch up, +ve for pitch down',
        type: 3 /* Int32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'rw',
    }),
    bank: new offset_1.Offset({
        value: 0x57C,
        name: 'bank',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'bank - -ve right bank, +ve left bank',
        type: 3 /* Int32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'rw',
    }),
    heading: new offset_1.Offset({
        value: 0x580,
        name: 'heading',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'heading - TRUE',
        type: 6 /* UInt32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'rw',
    }),
    viewpointLatitude: new offset_1.Offset({
        value: 0x5B0,
        name: 'viewpointLatitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'viewpoint latitude - -ve for south +ve for north',
        type: 4 /* Int64 */,
        convert: '{VAL} * 90 / (10001750 * 65536 * 65536)',
        permission: 'r',
    }),
    viewpointLongitude: new offset_1.Offset({
        value: 0x5B8,
        name: 'viewpointLongitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'viewpoint longitude - -ve for west +ve for east',
        type: 4 /* Int64 */,
        convert: '{VAL} * 360 / (65536 * 65536 * 65536 * 65536)',
        permission: 'r',
    }),
    viewpointAltitude: new offset_1.Offset({
        value: 0x5C0,
        name: 'viewpointAltitude',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'viewpoint altitude - AGL',
        type: 4 /* Int64 */,
        convert: '+({VAL} * 3.28084 / (65536 * 65536)).toFixed(2)',
        permission: 'r',
    }),
    viewpointPitch: new offset_1.Offset({
        value: 0x5C8,
        name: 'viewpointPitch',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'pitch - 0 for level, - for pitch up,  for pitch down',
        type: 3 /* Int32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'r',
    }),
    viewpointBank: new offset_1.Offset({
        value: 0x5CC,
        name: 'viewpointBank',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'viewpoint bank - - right bank, + left bank',
        type: 3 /* Int32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'r',
    }),
    viewpointHeading: new offset_1.Offset({
        value: 0x5D0,
        name: 'viewpointHeading',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'viewpoint heading - TRUE',
        type: 6 /* UInt32 */,
        convert: '+({VAL} * 360 / (65536 * 65536)).toFixed(2)',
        permission: 'r',
    }),
    verticalSpeed: new offset_1.Offset({
        value: 0x842,
        name: 'verticalSpeed',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'vertical speed - more precise - ft/min - +ve = up',
        type: 2 /* Int16 */,
        convert: '+({VAL} * -3.28084).toFixed(2)',
        permission: 'r',
    }),
    gForce: new offset_1.Offset({
        value: 0x1140,
        name: 'gForce',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'g-force',
        type: 8 /* Double */,
        permission: 'r',
    }),
    gForceTouchDown: new offset_1.Offset({
        value: 0x11B8,
        name: 'gForceTouchDown',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'g-force touchdown - unknown unit',
        convert: '{VAL} / 625',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
    gForceAlt: new offset_1.Offset({
        value: 0x11BA,
        name: 'gForceAlt',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'g-force alt unit',
        convert: '{VAL} / 625',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
    angleOfAttack: new offset_1.Offset({
        value: 0x11BE,
        name: 'angleOfAttack',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'angle of attack - percent of max',
        convert: '+(100 - (100 * {VAL} / 32767)).toFixed(2)',
        type: 2 /* Int16 */,
        permission: 'r',
    }),
    machSpeed: new offset_1.Offset({
        value: 0x11C6,
        name: 'machSpeed',
        category: offset_category_1.OffsetCategory.POSITION_ATTITUDE,
        description: 'mach speed',
        convert: '{VAL} / 20480',
        type: 5 /* UInt16 */,
        permission: 'r',
    }),
};
